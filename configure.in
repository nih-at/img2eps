dnl Process this file with autoconf to produce a configure script.

dnl init

AC_PREREQ(2.50)
AC_REVISION([$NiH: configure.in,v 1.14 2002/10/16 11:53:17 dillo Exp $])
AC_INIT([img2eps], [0.1])
AC_CONFIG_SRCDIR([src/im_gif.c])
AC_CONFIG_HEADERS([config.h])
AM_INIT_AUTOMAKE

AC_CANONICAL_HOST

AC_ARG_WITH(gif,
    [  --without-gif           don't include GIF support],,
    with_gif=yes)
AC_ARG_WITH(png,
    [  --without-png           don't include PNG support],,
    with_png=yes)
AC_ARG_WITH(jpeg,
    [  --without-jpeg          don't include JPEG support],,
    with_jpeg=yes)
AC_ARG_WITH(tiff,
    [  --without-tiff          don't include TIFF support],,
    with_tiff=yes)
AC_ARG_ENABLE(lzw,
    [  --disable-lzw           disable LZW compression],,
    enable_lzw=yes)

AC_PROG_CC

dnl programs

dnl libraries

AC_CHECK_LIB(z, deflate)

if test "$with_gif" = "yes"
then
  AC_CHECK_LIB(gif, DGifOpenFileName)
fi
if test "$with_jpeg" = "yes"
then
  AC_CHECK_LIB(jpeg, jpeg_read_header)
fi
if test "$with_png" = "yes"
then
  AC_CHECK_LIB(png, png_create_read_struct, ,
	       [AC_CHECK_LIB(png, png_destroy_read_struct,
	                     [AC_DEFINE(HAVE_LIBPNG)
			      LIBS="-lpng -lm $LIBS"], , -lm)])
fi
if test "$with_tiff" = "yes"
then
  AC_CHECK_LIB(tiff, TIFFOpen)
fi

dnl header files

dnl typedefs
dnl structures

dnl compiler characteristics

dnl library functions

AC_REPLACE_FUNCS(getopt_long)
AC_CHECK_FUNC(vasprintf, , [AC_LIBOBJ([snprintf])])

dnl system services

dnl output

AC_MSG_CHECKING([for GIF support])
if test "$with_gif" = "yes"
then
    if test "$ac_cv_lib_gif_DGifOpenFileName" = "yes"
    then
	AC_DEFINE(USE_GIF, , [define if GIF support should be compiled])
	AC_MSG_RESULT([yes])
    else
	AC_MSG_RESULT([no])
    fi
else
    AC_MSG_RESULT([disabled])
fi

AC_MSG_CHECKING([for JPEG support])
if test "$with_jpeg" = "yes"
then
    if test "$ac_cv_lib_jpeg_jpeg_read_header" = "yes"
    then
	AC_DEFINE(USE_JPEG, , [define if JPEG support should be compiled])
	AC_MSG_RESULT([yes])
    else
	AC_MSG_RESULT([no])
    fi
else
    AC_MSG_RESULT([disabled])
fi

AC_MSG_CHECKING([for PNG support])
if test "$with_png" = "yes"
then
    if test "$ac_cv_lib_png_png_create_read_struct" = "yes" -o \
	    "$ac_cv_lib_png_png_destroy_read_struct" = "yes"
    then
	AC_DEFINE(USE_PNG, , [define if PNG support should be compiled])
	AC_MSG_RESULT([yes])
    else
	AC_MSG_RESULT([no])
    fi
else
    AC_MSG_RESULT([disabled])
fi

AC_MSG_CHECKING([for TIFF support])
if test "$with_tiff" = "yes"
then
    if test "$ac_cv_lib_tiff_TIFFOpen" = "yes"
    then
	AC_DEFINE(USE_TIFF, , [define if TIFF support should be compiled])
	AC_MSG_RESULT([yes])
    else
	AC_MSG_RESULT([no])
    fi
else
    AC_MSG_RESULT([disabled])
fi

AC_MSG_CHECKING([for LZW compression support])
if test "$enable_lzw" = "yes"
then
    AC_DEFINE(USE_LZW_COMPRESS, ,
              [define if LZW compression support should be compiled])
    AC_MSG_RESULT([yes])
else
    AC_MSG_RESULT([disabled])
fi

case $host_os
in
        *bsd*) MANFMT=mdoc;;
        *) MANFMT=man;;
esac

AC_LINK_FILES(doc/img2eps.${MANFMT}, doc/img2eps.1)

AC_OUTPUT(Makefile doc/Makefile src/Makefile regress/Makefile)

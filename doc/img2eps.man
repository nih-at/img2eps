.TH "IMG2EPS" "1" "July 30, 2005" "NiH" "General Commands Manual"
.nh
.if n .ad l
.SH "NAME"
\fBimg2eps\fR
\- package raster images into EPS file
.SH "SYNOPSIS"
.HP 1n
\fB\fR
[\fB\-123\fR]
[\fB\-a\fR\ |\ \fB\--ascii\fR\ \fIenc\fR]
[\fB\--bottom-margin\fR\ \fIm\fR]
[\fB\-C\fR\ |\ \fB\--compress\fR\ \fIc\fR]
[\fB\-c\fR\ |\ \fB\--stdout\fR]
[\fB\-G\fR\ |\ \fB\--gravity\fR\ \fIg\fR]
[\fB\-g\fR\ |\ \fB\--gray\fR\ |\ \fB\--grey\fR]
[\fB\-h\fR\ |\ \fB\--help\fR]
[\fB\--height\fR\ \fIh\fR]
[\fB\--ignore-order\fR]
[\fB\--left-margin\fR\ \fIm\fR]
[\fB\--level\fR]
[\fB\-m\fR\ |\ \fB\--margin\fR\ \fIm\fR]
[\fB\-n\fR\ |\ \fB\--dry-run\fR]
[\fB\-O\fR\ |\ \fB\--orientation\fR\ \fIo\fR]
[\fB\-o\fR\ |\ \fB\--output\fR\ \fIfile\fR]
[\fB\-P\fR\ |\ \fB\--paper\fR\ \fIp\fR]
[\fB\-r\fR\ |\ \fB\--resolution\fR\ \fIr\fR]
[\fB\-R\fR\ |\ \fB\--recompress\fR]
[\fB\--right-margin\fR\ \fIm\fR]
[\fB\-s\fR\ |\ \fB\--size\fR\ \fIs\fR]
[\fB\--top-margin\fR\ \fIm\fR]
[\fB\-v\fR\ |\ \fB\--verbose\fR]
[\fB\-V\fR\ |\ \fB\--version\fR]
[\fB\--width\fR\ \fIw\fR]
\fIfile\ ...\fR
.SH "DESCRIPTION"
\fBimg2eps\fR
packages each
\fIfile\fR
into an EPS (Embedded PostScript) file, using whatever PostScript
features are advantageous.
The default name for each output file is the name of the input file
with its extension changed to
\fI\&.eps\fR.
Supported image file formats are:
.RS 6n
.PD 0
.TP 4n
\fBo\fR
GIF
.TP 4n
\fBo\fR
JPEG
.TP 4n
\fBo\fR
PNG
.TP 4n
\fBo\fR
TIFF
.TP 4n
\fBo\fR
XBM
.TP 4n
\fBo\fR
XPM
.RE
.PD
.PP
If possible, the compressed image data is copied directly to the EPS file.
.SH "The Options"
.RS 6n
.TP 20n
\fB\-1\fR
Use only features present in PostScript language level 1.
.PD 0
.TP 20n
\fB\-2\fR
Use only features present in PostScript language level 2.
.TP 20n
\fB\-3\fR
Explicitly allow the use of PostScript language level 3 features.
.TP 20n
\fB\-a\fR \fIenc\fR
.TP 20n
\fB\--ascii\fR \fIenc\fR
Use
\fIenc\fR
ASCII encoding for binary data.
Supported encodings are:
.RS 26n
.TP 4n
\fBo\fR
ASCII85
.TP 4n
\fBo\fR
ASCIIHEX
.RE
.TP 20n
\fB\--bottom-margin\fR \fIm\fR
Set bottom margin to
\fIm\fR.
.TP 20n
\fB\-C\fR \fIc\fR
.TP 20n
\fB\--compress\fR \fIc\fR
Use compression method
\fIc\fR
for image data.
Supported compression methods are:
.RS 26n
.TP 4n
\fBo\fR
DCT (jpeg)
.TP 4n
\fBo\fR
Flate (zlib)
.TP 4n
\fBo\fR
LZW
.TP 4n
\fBo\fR
RunLength (PackBits)
.RE
.TP 20n
\fB\-c\fR
.TP 20n
\fB\--stdout\fR
Write EPSF to standard output.
If this option is used, only one input file may be specified.
.TP 20n
\fB\-G\fR \fIg\fR
.TP 20n
\fB\--gravity\fR \fIg\fR
Specify the placement of image within the printable area of the page.
The gravity can be either a pair of numbers (see below) in the range
of 0 to 1 inclusive, which specify how much of the free space is
placed to the left / above the image, or one of the following
pre-defined settings:
.RS 26n
.TP 4n
\fBo\fR
top-left
.TP 4n
\fBo\fR
top
.TP 4n
\fBo\fR
top-right
.TP 4n
\fBo\fR
left
.TP 4n
\fBo\fR
center
.TP 4n
\fBo\fR
right
.TP 4n
\fBo\fR
bottom-left
.TP 4n
\fBo\fR
bottom
.TP 4n
\fBo\fR
bottom-right
.RE
.TP 20n
\fB\-g\fR
.TP 20n
\fB\--gray\fR
Convert image to grayscale.
.TP 20n
\fB\--height\fR \fIh\fR
Specify the height of the image to be
\fIh\fR,
which should be a dimen (see below).
If the width is not specified also, it will be computed to keep the
aspect ratio of the original image.
.TP 20n
\fB\-h\fR
.TP 20n
\fB\--help\fR
Display a short help message.
.TP 20n
\fB\--ignore-order\fR
Ignore pixel order information from image and assume row major
left to right, top to bottom.
.TP 20n
\fB\--left-margin\fR \fIm\fR
Set left margin to
\fIm\fR,
which should be a dimen (see below).
.TP 20n
\fB\--level\fR \fIl\fR
Use only features present in PostScript language level
\fIl\fR.
Alternatively, you can also use the
\fB\-1\fR,
\fB\-2\fR,
and
\fB\-3\fR
options.
.TP 20n
\fB\-m\fR \fIm\fR
.TP 20n
\fB\--margin\fR \fIm\fR
Set all margins to
\fIm\fR,
which should be a dimen (see below).
.TP 20n
\fB\-n\fR
.TP 20n
\fB\--dry-run\fR
Don't create EPSF, only print information about what would have been done.
.TP 20n
\fB\-O\fR \fIo\fR
.TP 20n
\fB\--orientation\fR \fIo\fR
Set orientation (rotation) of image:
.RS 26n
.TP 15n
portrait
Don't rotate image.
.TP 15n
landscape
Rotate image 90 degrees counter-clockwise.
.TP 15n
upside-down
Rotate image 180 degrees.
.TP 15n
seascape
Rotate image 90 degrees clockwise.
.TP 15n
auto
Use portrait or landscape, whichever fits the image better.
.RE
.TP 20n
\fB\-o\fR \fIfile\fR
.TP 20n
\fB\--output\fR \fIfile\fR
Write EPSF to output file
\fIfile\fR.
If this option is used, only one input file may be specified.
.TP 20n
\fB\-P\fR \fIp\fR
.TP 20n
\fB\--paper\fR \fIp\fR
Set paper size to
\fIp\fR.
The paper size can be specified either as a pair of dimens (see
below), or by using one of the following pre-defined sizes:
.RS 26n
.TP 4n
\fBo\fR
10x14
.TP 4n
\fBo\fR
A3, A4, A5
.TP 4n
\fBo\fR
B4, B5
.TP 4n
\fBo\fR
executive
.TP 4n
\fBo\fR
folio
.TP 4n
\fBo\fR
ledger
.TP 4n
\fBo\fR
legal
.TP 4n
\fBo\fR
letter
.TP 4n
\fBo\fR
quarto
.TP 4n
\fBo\fR
statement
.TP 4n
\fBo\fR
tabloid
.RE
.TP 20n
\fB\-r\fR \fIr\fR
.TP 20n
\fB\--resolution\fR \fIr\fR
Specify the resolution to print the image at, in dpi (dots per inch).
\fIr\fR
can be a number to specify equal horizontal and vertical resolution
or a pair of numbers (see below) to specify horizontal and vertical
resolutions separately.
.TP 20n
\fB\-R\fR
.TP 20n
\fB\--recompress\fR
Force recompression of image data, even if a direct copy would be
possible.  This might be necessary since PostScript imposes stricter
image data constraints than other image manipulation software.
.TP 20n
\fB\--right-margin\fR \fIm\fR
Set right margin to
\fIm\fR,
which should be a dimen (see below).
.TP 20n
\fB\-S\fR \fIs\fR
.TP 20n
\fB\--size\fR \fIs\fR
Specify the size of the printed image.
\fIs\fR
should be a pair of dimens (see below).
.TP 20n
\fB\--top-margin\fR \fIm\fR
Set top margin to
\fIm\fR,
which should be a dimen (see below).
.TP 20n
\fB\-V\fR
.TP 20n
\fB\--version\fR
Display version number.
.TP 20n
\fB\--width\fR \fIw\fR
Specify the width of the image to be
\fIw\fR,
which should be a dimen (see below).
If the height is not specified also, it will be computed to keep the
aspect ratio of the original image.
.RE
.PD
.SS "Dimens and Pairs"
A dimen is a number optionally followed by a unit.
Supported units are:
.RS 6n
.PD 0
.TP 4n
\fBo\fR
cm
.TP 4n
\fBo\fR
in
.TP 4n
\fBo\fR
mm
.TP 4n
\fBo\fR
pt (PostScript point, 1/72in)
.RE
If no unit is specified, pt is assumed.
.PD
.PP
A pair of numbers should be separated by any one of
\(oqx\(cq,
\(oq*\(cq,
or
\(oq\&,\(cq.
.PP
A pair of dimens is a pair of numbers optionally followed by a unit,
which applies to both numbers of the pair.
.SS "Language Levels"
There are three major versions of PostScript, called Language Levels:
.PP
Language Level 1 only supports ASCIIHEX encoded, uncompressed images
and does not support indexed (paletted) images.
.PP
Language Level 2 adds support for ASCII85 encoding and various
compression schemes, 12 bit samples, and indexed images.
Most PostScript printers support Language Level 2.
.PP
Language Level 3 adds support for Flate (zlib) compression, a
patent-free lossless compression scheme.
Ghostscript supports Language Level 3, as do most PostScript colour
printers.
.SS "Default Parameters"
The default value for any parameter not specified via command line
options is derived from the image:
.PP
The color space type is taken from the image.
However, for language level 1, indexed images are converted to their
base color space.
.PP
An unsupported depth is converted to the next higher supported depth,
if it exists, or the highest supported depth (8 for language level 1,
12 for language level 2 or 3).
.PP
If direct copy of the compressed image data is supported, the
compression method of the image is used.
If the image is compressed with DCT (jpeg), DCT compression is used
even if recompression is necessary.
Otherwise, the best lossless compression method available is used,
which is Flate for language level 3 and LZW for language level 2.
Language level 1 disallows compression altogether.
.PP
ASCII85 encoding is used for language level 2 or 3, ASCIIHEX for
language level 1.
.PP
If no language level is specified, the lowest level that supports the
color space type, depth, and, for direct copy or DCT encoding, the
compression method used.
.SH "EXIT STATUS"
The
\fBimg2eps\fR
utility exits 0 on success, and >0 if an error occurs.
.SH "SEE ALSO"
gs(1)
.PP
Adobe Systems Incorporated,
\fIPostScript Language Reference, 3rd edition\fR,
1999.
.SH "AUTHORS"
\fBimg2eps\fR
was written by
Dieter Baron <\fIdillo@nih.at\fR>.
.PP
The manual page was written with the help of
Thomas Klausner <\fItk@giga.or.at\fR>.
.PP
The LZW compression routines and various library function replacements
(for portability) were taken from the NetBSD Project.
.SH "BUGS"
Since PostScript's JPEG decoder is stricter than most software
implementations, directly copying JPEG compressed data causes
PostScript errors for some images.  This is not detected by
\fBimg2eps\fR.
Use
\fB\-R\fR
(\fB\--recompress\fR)
for such images.
.PP
Emulation of the colorimage operator is provided only for 8bit RGB
images.
(The presence of the operator is assumed for other color formats.)
.PP
Predictor functions (for LZW or Flate compression) are not supported.
.PP
TIFF images that include more than one extra sample per pixel, or use
separated planar or tiled layout, are not supported.
Direct copy of LZW compressed TIFF images using the old (bit-swapped)
format is not supported and may result in broken EPS files.
.PP
Multi-page GIF images are not supported.

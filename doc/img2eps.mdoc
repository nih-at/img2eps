.\"	-*- nroff -*-
.\" This man page written by Thomas Klausner <tk@giga.or.at> and
.\" Dieter Baron <dillo@giga.or.at>.
.\" $NiH: img2eps.mdoc,v 1.4 2002/10/12 02:43:48 dillo Exp $
.Dd October 10, 2002
.Dt IMG2EPS 1
.Os
.Sh NAME
.Nm img2eps
.Nd package raster images into EPS file
.Sh SYNOPSIS
.Nm ""
.Op Fl 123cghV
.Op Fl a | Fl -ascii Ar ENC
.Op Fl C | Fl -compress Ar C
.Op Fl -help
.Op Fl -level
.Op Fl m | Fl -margin Ar M
.Op Fl o | Fl -output Ar FILE
.Op Fl P | Fl -paper Ar P
.Op Fl v | Fl -verbose
.Op Fl -version
.Ar file ...
.Sh DESCRIPTION
.Nm
packages each
.Ar file
into an EPS (Embedded PostScript) file, using whatever PostScript
features are advantageous.
Supported image file formats are:
.Bl -bullet -offset indent -compact
.It
GIF
.It
JPEG
.It
PNG
.It
TIFF
.El
.Pp
The options are:
.Bl -tag -width XXXXXXXXXXXXX -offset indent -compact
.It Fl 1
Use only features present in PostScript language level 1.
.It Fl 2
Use only features present in PostScript language level 2.
.It Fl 3
Explicitly allow the use of PostScript language level 3 features.
.It Fl a Ar ENC
.It Fl -ascii Ar ENC
Use
.Ar ENC
ASCII encoding for binary data.
Supported encodings are ASCIIHEX and ASCII85.
.It Fl C Ar C
.It Fl -compress Ar C
Use compression method
.Ar C
for image data.
Supported compression methods are
DCT (jpeg), RunLength (PackBits), LZW, and Flate (zlib).
.It Fl c
.It Fl -stdout
Write EPSF to standard output.
.It Fl g
.It Fl -gray
Convert image to grayscale.
.It Fl h
.It Fl -help
Display a short help message.
.It Fl -level Ar L
Use only features present in PostScript language level
.Ar L .
Alternatively, you can also use the
.Fl 1 ,
.Fl 2 ,
and
.Fl 3
options.
.It Fl m Ar M
.It Fl -margin Ar M
Set all margins to
.Ar M .
.It Fl o Ar FILE
.It Fl -output Ar FILE
Write EPSF to output file
.Ar FILE .
The default is the name of the input file with its extension changed
to
.Em .eps .
.It Fl P Ar P
.It Fl -paper Ar P
Set paper size to
.Ar P .
Supported sizes are
.Em XXX unknown .
.It Fl V
.It Fl -version
Display version number.
.El
.Pp
If possible, the compressed image data is copied directly to the EPS file.
.Ss Language Levels
There are three major versions of PostScript, called Language Levels:
.Pp
Language Level 1 only supports ASCIIHEX encoded, uncompressed images
and does not support indexed (paletted) images.
.Pp
Language Level 2 adds support for ASCII85 encoding and various
compression schemes, 12 bit samples, and indexed images.
Most PostScript printers support Language Level 2.
.Pp
Language Level 3 adds support for Flate (zlib) compression, a
patent-free lossless compression scheme.
Ghostscript supports Language Level 3.
.Ss Default Parameters
The default value for any parameter not specified via command line
options is derived from the image:
.Pp
The color space type is taken from the image.
However, for language level 1, indexed images are converted to their
base color space.
.Pp
An unsupported depth is converted to the next higher supported depth,
if it exists, or the highest supported depth (8 for language level 1,
12 for language level 2 or 3).
.Pp
If direct copy of the compressed image data is supported, the
compression method of the image is used.
If the image is compressed with DCT (jpeg), DCT compression is used
even if recompression is necessary.
Otherwise, the best lossless compression method available is used,
which is Flate for language level 3, LZW (or RunLength if LZW encoding
is disabled) for language level 2.
Language level 1 disallows compression altogether.
.Pp
ASCII85 encoding is used for language level 2 or 3, ASCIIHEX for
language level 1.
.Pp
If no language level is specified, the lowest level that supports the
color space type, depth, and, for direct copy or DCT encoding, the
compression method is used.
.Sh EXIT STATUS
The
.Nm
utility exits 0 on success, and \*[Gt]0 if an error occurs.
.Sh SEE ALSO
.Xr gs 1
.Sh AUTHORS
.Nm
was written by
.An Dieter Baron Aq dillo@giga.or.at .
.Pp
The LZW compression routines and various library function replacements
(for portability) were taken from the NetBSD Project.
.Sh BUGS
Emulation of the colorimage operator is provided only for 8bit RGB
images.
(The presence of the operator is assumed for other color formats.)
.Pp
Predictor functions (for LZW or Flate compression) are not supported.
.Pp
TIFF images that include more than one extra sample per pixel, or use
separated planar or tiled layout, are not supported.
Direct copy of LZW compressed TIFF images using the old (bit-swapped)
format is not supported and may result in broken EPS files.
.Pp
Multi-page GIF images are not supported.
